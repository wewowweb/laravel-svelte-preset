name: Run tests

on: [push, pull_request]


jobs:
    php-tests:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                php: [8.1, 8.0, 7.4, 7.3, 7.2]
                laravel: [9.*, 8.*, 7.*, 6.*, 5.8.*]
                dependency-version: [prefer-lowest, prefer-stable]
                os: [ubuntu-latest]
                include:
                    - laravel: 9.*
                      testbench: 7.*
                    - laravel: 8.*
                      testbench: 6.*
                    - laravel: 7.*
                      testbench: 5.*
                    - laravel: 6.*
                      testbench: 4.*
                    - laravel: 5.8.*
                      testbench: 3.8.*
                exclude:
                    - php: 8.1
                      laravel: 5.8.*
                    - php: 8.0
                      laravel: 5.8.*
                    - php: 7.4
                      laravel: 5.8.*
                    - php: 7.4
                      laravel: 9.*
                    - php: 7.3
                      laravel: 9.*
                    - php: 7.2
                      laravel: 8.*
                    - php: 7.2
                      laravel: 9.*

        name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Get Composer Cache Directory
              id: composer-cache
              run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"
            - uses: actions/cache@v3
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                  ${{ runner.os }}-composer-

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  tools: phpunit
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
                  coverage: none

            - name: Install dependencies
              run: |
                  composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
                  composer clearcache
                  composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

            - name: Execute tests
              run: vendor/bin/phpunit
